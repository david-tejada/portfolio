---
import ThemeToggle from "../components/ThemeToggle.astro";
---

<header class="fixed top-0 right-0 left-0 px-16 py-8">
  <div class="space-around flex grow items-center max-sm:gap-8">
    <nav id="main-navigation" class="max-sm:order-1">
      <button
        id="menu-button"
        class="peer relative z-100 sm:hidden"
        aria-expanded="false">open</button
      >
      <div
        id="menu-overlay"
        class="pointer-events-none fixed inset-0 bg-black opacity-0 transition-opacity duration-300 peer-aria-expanded:pointer-events-auto peer-aria-expanded:opacity-50"
      >
      </div>
      <ul
        class="flex items-center justify-center gap-12 max-sm:fixed max-sm:top-0 max-sm:right-0 max-sm:bottom-0 max-sm:z-10 max-sm:w-4/5 max-sm:translate-x-full max-sm:flex-col max-sm:bg-white max-sm:transition-transform max-sm:duration-300 max-sm:peer-aria-expanded:translate-x-0 max-sm:dark:bg-slate-800"
      >
        <li><a href="/">Home</a></li>
        <li><a href="#work">Work</a></li>
        <li><a href="#about">About</a></li>
        <li><a href="#contact">Contact</a></li>
      </ul>
    </nav>
    <ThemeToggle class="max-sm:z-1" />
  </div>
</header>

<script>
  const mainNavigationList = document.querySelector("#main-navigation ul");
  const menuButton = document.querySelector("#menu-button");
  const menuOverlay = document.querySelector("#menu-overlay");
  const menuLinks = document.querySelectorAll("#main-navigation a");

  mainNavigationList.addEventListener("touchmove", (event) => {
    event.preventDefault();
  });

  menuButton.addEventListener("click", () => {
    menuButton.ariaExpanded =
      menuButton.ariaExpanded === "true" ? "false" : "true";
    menuButton.textContent =
      menuButton.ariaExpanded === "true" ? "close" : "open";
  });

  document.addEventListener("scroll", () => {
    closeNavigationMenu();
  });

  menuOverlay.addEventListener("click", () => {
    closeNavigationMenu();
  });

  menuOverlay.addEventListener("touchmove", () => {
    closeNavigationMenu();
  });

  for (const link of menuLinks) {
    link.addEventListener("click", () => {
      closeNavigationMenu();
    });
  }

  function closeNavigationMenu() {
    menuButton.ariaExpanded = "false";
    menuButton.textContent =
      menuButton.ariaExpanded === "true" ? "close" : "open";
  }
</script>
